---
title: OpenID unstable features
slug: openid-unstable-features
description: Changes and additionnals openid features in unstable
---
{% callout type="warning" %}
Those features have not been released yet. It is only available for testing in [unstable builds](/docs/versions#unstable).
{% /callout %}

On this page are described changes and new features related to OpenID that are
for now only available on unstable builds.

## Vikunja Config

There is a new syntax to declare providers, however, it is pretty easy to convert to the new syntax.

Before:

```yaml
auth:
  openid:
    enabled: true
    redirecturl: https://vikunja.mydomain.com/auth/openid/  <---- slash at the end is important
    providers:
      - name: <provider-name>
        authurl: <auth-url>  <----- Used for OIDC Discovery, usually the issuer 
        clientid: <vikunja client-id>
        clientsecret: <vikunja client-secret>
        scope: openid profile email
      - name: <provider2-name>
        authurl: <auth-url>  <----- Used for OIDC Discovery, usually the issuer 
        clientid: <vikunja client-id>
        clientsecret: <vikunja client-secret>
        scope: openid profile email
```

Now:

```yaml
auth:
  openid:
    enabled: true
    redirecturl: https://vikunja.mydomain.com/auth/openid/  <---- slash at the end is important
    providers:
      <provider-id1>:
        name: <provider1-name>
        authurl: <auth-url>  <----- Used for OIDC Discovery, usually the issuer 
        clientid: <vikunja client-id>
        clientsecret: <vikunja client-secret>
        scope: openid profile email
      <provider-id2>:
        name: <provider2-name>
        authurl: <auth-url>  <----- Used for OIDC Discovery, usually the issuer 
        clientid: <vikunja client-id>
        clientsecret: <vikunja client-secret>
        scope: openid profile email
```


## Login to pre-existing local user

It is now possible to login via SSO to a pre-existing `local` user.
When you create a `local` user, you must supply a `username` and an `email`. 
This feature allows one (or more) provider to login on a local user account
based on `email` and/or `username`.

In order to match on the username, we need the OpenID subject to be the same as the vikunja local account username. 
that is to be configured in your SSO provider. 

For instance with Authentik, you need to edit the provider under Applications > Providers > Vikunja provider. 
Then under advanced protocol settings, subject mode must be set to : Based on the Users's username


A valid config to match on both username and password for a given provider would look like 

```yaml
auth:
  local:
    enabled: true
  openid:
    enabled: true
    providers:
      authentiklogin:
        name: "Login using authentik"
        usernamefallback: true
        emailfallback: true
        authurl: https://authentik.domain.tld/application/o/vikunja/
        clientid: xxxxxxxxxxxxxxxxx
        clientsecret: xxxxxxxxxxxxxxxxxxxxxxxxxxxx
```


Please note that when connecting using SSO, if no user is found, an SSO user is created. 
Therefore, if you missconfigure something, chances are that you created a new SSO account for the user 
and won't be able to login to the local user by using SSO, until the SSO user is deleted.



## Automatically login with specified provider

It is possible to automatically login using a specific provider. To any Vikunja URL, 
you can add the following parameter `?redirectToProvider=provider-id1`
By doing so, Vikunja will attempt login to `provider-id1` from the config file.

If only one provider is configured, the paramater can be one of the following 
`?redirectToProvider` `?redirectToProvider=true` `?redirectToProvider=1`

Example : https://vikunja.domain.tld/?redirectToProvider=authentiklogin